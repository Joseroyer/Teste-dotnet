// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteDirectData.Context;

#nullable disable

namespace TesteDirectData2.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230216144306_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteDirectData.Models.Categoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Categoria", (string)null);
                });

            modelBuilder.Entity("TesteDirectData.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Ativo")
                        .HasColumnType("Integer");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<int>("Estoque")
                        .HasColumnType("Integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("PrecoVenda")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UnidadeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoriaID");

                    b.HasIndex("UnidadeID");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("TesteDirectData.Models.Unidade", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Unidade", (string)null);
                });

            modelBuilder.Entity("TesteDirectData2.Models.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("TesteDirectData.Models.Produto", b =>
                {
                    b.HasOne("TesteDirectData.Models.Categoria", "Categorias")
                        .WithMany()
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteDirectData.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorias");

                    b.Navigation("Unidade");
                });
#pragma warning restore 612, 618
        }
    }
}
